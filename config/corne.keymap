/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt { tapping-term-ms = <400>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp ESCAPE>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <10 9 8>;
            bindings = <&kp BACKSPACE>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <13 14 15>;
        };

        combo_shift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <25 26 27>;
        };

        combo_delete {
            bindings = <&kp DELETE>;
            key-positions = <21 22 20>;
        };

        combo_rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <33 34 32>;
        };

        exclm {
            bindings = <&kp EXCLAMATION>;
            key-positions = <1 13>;
        };

        at {
            bindings = <&kp AT_SIGN>;
            key-positions = <2 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <3 15>;
        };

        dllr {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        percnt {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <6 18>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <7 19>;
        };

        str {
            bindings = <&kp ASTERISK>;
            key-positions = <8 20>;
        };

        leftparen {
            bindings = <&kp LPAR>;
            key-positions = <9 21>;
        };

        rparen {
            bindings = <&kp RPAR>;
            key-positions = <10 22>;
        };

        layout_switch {
            bindings = <&tog 0>;
            key-positions = <36 37 40 41>;
        };

        system_reset {
            bindings = <&sys_reset>;
            key-positions = <3 4 5 14>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <15 16 17 26>;
        };

        system_layer_combo {
            bindings = <&mo 0>;
            key-positions = <36 37 38>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    keymap {
        compatible = "zmk,keymap";

        Primary_1 {
            bindings = <
&none  &mt LEFT_WIN Q  &kp W  &kp E         &kp R           &kp T        &kp Y      &kp U          &kp I      &kp O    &mt RIGHT_ALT P  &none
&none  &kp A           &kp S  &kp D         &kp F           &kp G        &kp H      &kp J          &kp K      &kp L    &kp LEFT_ALT     &none
&none  &kp Z           &kp X  &kp C         &kp V           &kp B        &kp N      &kp M          &kp COMMA  &kp DOT  &lt 2 BACKSLASH  &none
                              &lt 1 ESCAPE  &kt LEFT_SHIFT  &kp SPACE    &kp ENTER  &kp BACKSPACE  &kp RCTRL
            >;
        };

        Primary_2 {
            bindings = <
&trans  &kp TAB         &kp LEFT_ALT          &kp SEMI               &kp SINGLE_QUOTE  &kp RIGHT_ALT    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3       &kp NUMBER_4  &kp N5     &trans
&trans  &kp CLCK        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION      &kp EXCL         &kp NUMBER_6  &kp N7        &kp N8             &kp N9        &kp N0     &trans
&trans  &kp LEFT_SHIFT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE         &kp PIPE         &kp EQUAL     &kp MINUS     &kp SLASH          &kp PLUS      &kp ASTRK  &trans
                                              &trans                 &kp DOWN          &kp LEFT         &kp RIGHT     &kp UP_ARROW  &kp RIGHT_CONTROL
            >;
        };

        fun_layer {
            bindings = <
&trans  &kp SPACE  &kp UP_ARROW     &kp ENTER       &kp PAGE_UP     &kp C_VOL_UP        &kp C_BRIGHTNESS_INC  &kp F1           &kp F4         &kp F7  &kp F10  &trans
&trans  &kp LEFT   &kp DOWN         &kp C_PP        &kp HOME        &kp C_MUTE          &kp F12               &kp F2           &kp F5         &kp F8  &kp F11  &trans
&trans  &kp INS    &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAGE_DOWN   &kp C_VOL_DN        &kp C_BRIGHTNESS_DEC  &kp F3           &kp F6         &kp F9  &trans   &trans
                                    &kp LEFT_ALT    &kp LEFT_SHIFT  &kp LEFT_CONTROL    &kp RIGHT_CONTROL     &kp RIGHT_SHIFT  &kp RIGHT_ALT
            >;
        };
    };
};
